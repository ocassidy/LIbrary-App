version: 2.1
orbs:
  cypress: cypress-io/cypress@1
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12.9.1
    steps:
      - checkout
      - run:
          name: npm install
          command: npm install
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - store_artifacts:
          path: /coverage
          prefix: coverage
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12.9.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Test
          command: npm run test
      - store_test_results:
          path: /test/results/unit
  e2e:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12.9.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Integration Test
          command: npm run integrationTest --verbose
      - store_test_results:
          path: /test/results/integration
  deploy-integration:
    docker:
      - image: circleci/node:12.9.1
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_INTEGRATION_APP_NAME.git master
  deploy-staging:
    docker:
      - image: circleci/node:12.9.1
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_STAGING_APP_NAME.git master
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy-integration:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
      - cypress/install:
          build: 'npm run build'
      - cypress/run:
          requires:
            - cypress/install
          record: true
          parallel: true
          parallelism: 4
          group: 'all tests'
          start: 'npm start'
      - deploy-staging:
          requires:
            - build
            - e2e
            - deploy-integration
          filters:
            branches:
              only: master
